// MNT-753 (Tables 1, 2, 4, 5)
D := -241873351932854907;
assert D mod 3^6 eq 0;
D := D div 3^6;
assert D eq -331787862733683;
assert IsFundamental(D);
assert Ceiling(Log(2, -D)) eq 49;
QFs := QuadraticForms(D);
Cl, iso := ClassGroup(QFs);
Cl;

Prs := PrimesUpTo(150);
F := QuadraticField(D);
O := MaximalOrder(F);
perm := [];
for p in Prs do
    if IsRamified(p, O) or IsSplit(p, O) then
        f := PrimeForm(QFs, p);
    	Append(~perm, f);
    end if;
end for;

assert #perm eq 16;
f0 := iso(Identity(Cl));
f1 := perm[1];   f9 := perm[14]; 
f2 := perm[13];   f10 := perm[3];
f3 := perm[5];   f11 := perm[4];
f4 := perm[10];   f12 := perm[7];
f5 := perm[16];   f13 := perm[8];
f6 := perm[15];   f14 := perm[9];
f7 := perm[2];   f15 := perm[11];
f8 := perm[6];   f16 := perm[12];

assert
f0 eq QFs ! [1, 1, 82946965683421]   and
f1 eq QFs ! [3, 3, 27648988561141]   and
f2 eq QFs ! [131, 131, 633182944181]   and
f3 eq QFs ! [43, 13, 1928999201941]   and
f4 eq QFs ! [109, 41, 760981336549]   and
f5 eq QFs ! [149, 33, 556691044857]   and
f6 eq QFs ! [139, 117, 596740760337]   and 
f7 eq QFs ! [7, 1, 11849566526203]   and 
f8 eq QFs ! [47, 41, 1764829057103]   and 
f9 eq QFs ! [137, 89, 605452304273]   and 
f10 eq QFs ! [31, 3, 2675708570433]   and 
f11 eq QFs ! [41, 29, 2023096723991]   and 
f12 eq QFs ! [53, 11, 1565037088367]   and 
f13 eq QFs ! [103, 3, 805310346441]   and 
f14 eq QFs ! [107, 5, 775205286761]   and 
f15 eq QFs ! [113, 67, 734043944111]   and
f16 eq QFs ! [127, 65, 653125714051]   and

Order(f1) eq 2   and   
Order(f2) eq 2   and   
Order(f3) eq 83478   and   
Order(f4) eq 222608   and   
Order(f5) eq 333912   and   
Order(f6) eq 445216   and   
Order(f7) eq 667824   and   
Order(f8) eq 667824   and   
Order(f9) eq 667824   and
Order(f10) eq 1335648   and
Order(f11) eq 1335648   and
Order(f12) eq 1335648   and
Order(f13) eq 1335648   and
Order(f14) eq 1335648   and
Order(f15) eq 1335648   and
Order(f16) eq 1335648   and

Log(f10, f1) eq 667824   and
Log(f10, f2) eq -1   and
Log(f10, f3) eq 185168   and
Log(f10, f4) eq 349554   and
Log(f10, f2*f5) eq 845740   and
Log(f10, f6) eq 1189197   and
Log(f10, f7) eq 1027390   and
Log(f10, f2*f8) eq 656686   and
Log(f10, f2*f9) eq 639566   and
Log(f10, f2*f11) eq 1248073   and
Log(f10, f2*f12) eq 767525   and
Log(f10, f13) eq 1102297   and
Log(f10, f2*f14) eq 1070359   and
Log(f10, f2*f15) eq 275059   and
Log(f10, f16) eq 955363;

assert f1*f3*f4*f11^2 * (f7*f10^6)^(-1) eq f0;
dmin := f0[3];
fac := Factorization(dmin);
fac;
N := #fac;
sig := 0;
for i := 1 to N do
    sig := sig + fac[i][1]*fac[i][2];
end for;
sig;





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





// MNT-753 (Tables 4, 6)
n := 16;
w := [3, 131, 43, 109, 149, 139, 7, 47, 137, 31, 41, 53, 103, 107, 113, 127];
W := DiagonalMatrix(w);
M := Matrix(n, n, [
    1, 0, 0, 0, 0, 0, 0, 0, 0, -667824, 0, 0, 0, 0, 0, 0,
    0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 1, 0, 0, 0, 0, 0, 0, -185168, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 1, 0, 0, 0, 0, 0, -349554, 0, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 1, 0, 0, 0, 0, -845740, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 1, 0, 0, 0, -1189197, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 1, 0, 0, -1027390, 0, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 0, 0, 0, 1, 0, -656686, 0, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 1, -639566, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1335648, 0, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 0, -1248073, 1, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 0, -767525, 0, 1, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1102297, 0, 0, 1, 0, 0, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 0, -1070359, 0, 0, 0, 1, 0, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 0, -275059, 0, 0, 0, 0, 1, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -955363, 0, 0, 0, 0, 0, 1
]);
In := ScalarMatrix(n, 1);

L := Lattice(M, W);
L;
Zn := Lattice(In, W);
h := 2*1335648;
assert Index(Zn, L) eq h;
printf"\n";

R := 2500;
l1ws := 1000000;
B := ShortVectorsProcess(L, R);
while not IsEmpty(B) do
    v := NextVector(B);
    l1wv := 0;
    b := false;
    for i := 1 to n do
        viAbs := AbsoluteValue(v[i]);
        l1wv := l1wv + w[i]*viAbs;
        b := b or IsOdd(viAbs);
    end for;
    if b and (l1wv lt l1ws) then
        s := v;
        l1ws := l1wv;
    end if;
end while;

Qws := 0;
for i := 1 to n do
    Qws := Qws + w[i]*s[i]^2;
end for;
s;
l1ws; 
Qws; 
printf"\n";

l := 753;
lpr := Ceiling(l/2);
sig := 207280768;
8*lpr; 
Ceiling(7.5*sig); 
Ceiling(7.5*l1ws); 





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





// MNT-992 (Tables 1, 3, 4, 5)
D := -95718723;
assert IsFundamental(D);
assert Ceiling(Log(2, -D)) eq 27;
QFs := QuadraticForms(D);
Cl, iso := ClassGroup(QFs);
Cl;

Prs := PrimesUpTo(50);
F := QuadraticField(D);
O := MaximalOrder(F);
perm := [];
for p in Prs do
    if IsRamified(p, O) or IsSplit(p, O) then
        f := PrimeForm(QFs, p);
    	Append(~perm, f);
    end if;
end for;

assert #perm eq 7;
f0 := iso(Identity(Cl));
f1 := perm[1];
f2 := perm[7];
f3 := perm[5];
f4 := perm[3];
f5 := perm[6];
f6 := perm[2];
f7 := perm[4];

assert
f0 eq QFs ! [1, 1, 23929681]   and
f1 eq QFs ! [3, 3, 7976561]   and
f2 eq QFs ! [41, 41, 583661]   and
f3 eq QFs ! [23, 3, 1040421]   and
f4 eq QFs ! [17, 7, 1407629]   and
f5 eq QFs ! [31, 15, 771927]   and
f6 eq QFs ! [13, 11, 1840747]   and
f7 eq QFs ! [19, 3, 1259457]   and

Order(f1) eq 2   and
Order(f2) eq 2   and
Order(f3) eq 112   and
Order(f4) eq 392   and
Order(f5) eq 392   and
Order(f6) eq 784   and
Order(f7) eq 784   and

Log(f6, f1) eq -1   and
Log(f6, f1*f2) eq 392   and
Log(f6, f1*f3) eq 91   and
Log(f6, f1*f4) eq 486   and 
Log(f6, f5) eq 130   and
Log(f6, f7) eq 333;

assert f1*f2*f4*(f3*f6^3)^(-1) eq f0;
dmin := f0[3];
fac := Factorization(dmin);
fac;
N := #fac;
sig := 0;
for i := 1 to N do
    sig := sig + fac[i][1]*fac[i][2];
end for;
sig;





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





// MNT-992 (Tables 4, 6)
n := 7;
w := [3, 41, 23, 17, 31, 13, 19];
W := DiagonalMatrix(w);
M := Matrix(n, n, [
    2, 0, 0, 0, 0, 0, 0,
    1, 1, 0, 0, 0, -392, 0,
    1, 0, 1, 0, 0, -91, 0,
    1, 0, 0, 1, 0, -486, 0,
    0, 0, 0, 0, 1, -130, 0,
    0, 0, 0, 0, 0, 784, 0,
    0, 0, 0, 0, 0, -333, 1
]);
In := ScalarMatrix(n, 1);

L := Lattice(M, W);
L;
Zn := Lattice(In, W);
h := 2*784;
assert Index(Zn, L) eq h;
printf"\n";

R := 5000;
l1ws := 1000000;
B := ShortVectorsProcess(L, R);
while not IsEmpty(B) do
    v := NextVector(B);
    l1wv := 0;
    b := false;
    for i := 1 to n do
        viAbs := AbsoluteValue(v[i]);
        l1wv := l1wv + w[i]*viAbs;
        b := b or IsOdd(viAbs);
    end for;
    if b and (l1wv lt l1ws) then
        s := v;
        l1ws := l1wv;
    end if;
end while;

Qws := 0;
for i := 1 to n do
    Qws := Qws + w[i]*s[i]^2;
end for;
s;
l1ws; 
Qws; 
printf"\n";

l := 992;
lpr := Ceiling(l/2);
sig := 1095;
8*lpr;
Ceiling(7.5*sig);
Ceiling(7.5*l1ws);





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





// lollipop-956-451 (Tables 1, 3, 4, 5)
D := -120605958;
assert D mod 9 eq 0;
D := 4*(D div 9);
assert D eq -53602648;
assert IsFundamental(D);
assert Ceiling(Log(2, -D)) eq 26;
QFs := QuadraticForms(D);
Cl, iso := ClassGroup(QFs);
Cl;

Prs := PrimesUpTo(50);
F := QuadraticField(D);
O := MaximalOrder(F);
perm := [];
for p in Prs do
    if IsRamified(p, O) or IsSplit(p, O) then
        f := PrimeForm(QFs, p);
    	Append(~perm, f);
    end if;
end for;

assert #perm eq 8;
f0 := iso(Identity(Cl));
f1 := perm[1];
f2 := perm[2];
f3 := perm[4];
f4 := perm[8];
f5 := perm[5];
f6 := perm[6];
f7 := perm[7];
f8 := perm[3];

assert
f0 eq QFs ! [1, 0, 13400662]   and
f1 eq QFs ! [2, 0, 6700331]   and
f2 eq QFs ! [11, 0, 1218242]   and
f3 eq QFs ! [19, 0, 705298]   and
f4 eq QFs ! [47, 10, 285121]   and
f5 eq QFs ! [23, 18, 582641]   and
f6 eq QFs ! [29, 16, 462094]   and
f7 eq QFs ! [31, 14, 432281]   and
f8 eq QFs ! [17, 16, 788278]   and

Order(f1) eq 2   and
Order(f2) eq 2   and
Order(f3) eq 2   and
Order(f4) eq 28   and
Order(f5) eq 42   and
Order(f6) eq 42   and
Order(f7) eq 48   and
Order(f8) eq 336   and

Log(f8, f1) eq -1   and
Log(f8, f2) eq -1   and
Log(f8, f1*f2) eq -1   and
Log(f8, f1*f3) eq 168   and
Log(f8, f4) eq 276   and
Log(f8, f5) eq 184   and
Log(f8, f1*f6) eq 248   and 
Log(f8, f1*f2*f7) eq 287; 

assert f1*f6*f5^(-5) eq f0;
dmin := f0[3];
fac := Factorization(dmin);
fac;
N := #fac;
sig := 0;
for i := 1 to N do
    sig := sig + fac[i][1]*fac[i][2];
end for;
sig;





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





// lollipop-956-451 (Tables 4, 6)
n := 8;
w := [2, 11, 19, 47, 23, 29, 31, 17];
W := DiagonalMatrix(w);
M := Matrix(n, n, [
    2, 0, 0, 0, 0, 0, 0, 0,
    0, 2, 0, 0, 0, 0, 0, 0,
    1, 0, 1, 0, 0, 0, 0, -168,
    0, 0, 0, 1, 0, 0, 0, -276,
    0, 0, 0, 0, 1, 0, 0, -184,
    1, 0, 0, 0, 0, 1, 0, -248,
    1, 1, 0, 0, 0, 0, 1, -287,
    0, 0, 0, 0, 0, 0, 0, 336
]);
In := ScalarMatrix(n, 1);

L := Lattice(M, W);
L;
Zn := Lattice(In, W);
h := 2*2*336;
assert Index(Zn, L) eq h;
printf"\n";

R := 2500;
l1ws := 1000000;
B := ShortVectorsProcess(L, R);
while not IsEmpty(B) do
    v := NextVector(B);
    l1wv := 0;
    b := false;
    for i := 1 to n do
        viAbs := AbsoluteValue(v[i]);
        l1wv := l1wv + w[i]*viAbs;
        b := b or IsOdd(viAbs);
    end for;
    if b and (l1wv lt l1ws) then
        s := v;
        l1ws := l1wv;
    end if;
end while;

Qws := 0;
for i := 1 to n do
    Qws := Qws + w[i]*s[i]^2;
end for;
s;
l1ws; 
Qws; 
printf"\n";

l := 451;
lpr := Ceiling(l/2);
sig := 32091;
8*lpr;
Ceiling(7.5*sig); 
Ceiling(7.5*l1ws);
