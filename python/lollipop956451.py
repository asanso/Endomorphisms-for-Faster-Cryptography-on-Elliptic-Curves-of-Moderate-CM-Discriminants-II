from sage.all import FractionField
from sage.matrix.constructor import Matrix
from sage.modules.free_module_element import free_module_element as vector
from curve import WeierstrassCurve
from curve import PointWeierstrass

class  Lollipop956451(WeierstrassCurve):

    def __init__(self, p, a, b, r, cofactor,L):
        super().__init__(p, a,b, r, cofactor)
        self.a = a
        self.b = b
        self.D = -160807944 
        self.L = L
        self.cofactor = cofactor
        self.r = r
        M = Matrix([[-L,1], [r,0]])
        self.N = M.LLL()
        self.N_inv = self.N**-1
        self.Fpxz = self.Fp['x', 'z']
        self.FpXZ = FractionField(self.Fpxz)
        x, z = self.FpXZ.gens()
        
        a0_map = 36*x**7 + 52093178300019920831088149019314051232888168213855215466901398150856759165825142081300844754729266384812814186895830464818765409742963023209668068685551346824229758381291518549836095942317531113567498632709984830589066459540185798361769089894601095269793749238355573968396396248472966113*x**6*z + 101625270205915329150208244036819233114776677616667682143562350825890865178202618867968193383272169824102770255134215560272828592132856206249566232250400100147908327548050934015830847570278549715833061146739117054229084428040626154683019547224255401224433239151559275298375055242429392406*x**5*z**2 + 258434612088532982459344832459371716164045912907869304007571927894976984909716855974908565025897366164837992656504502017564296085382746721794012450276240627660364415626173564869675144871496806576080838085173300155092842544035299481590678456737686750811831784236306123852146610036252044571*x**4*z**3 + 169182265156315503932301417218794557353750714049107274750690822309494126528698399826952011883907685014506964714875663726886573181578889404419749469102754094812412448720439521490181430173244984277129958796043727359600252348021921086168670570254415080322602459633957659060856967392923559758*x**3*z**4 + 32645377557643449306671069693716494883272121329732367387366063547712140615654411978740340013400118010265778581978703766236105507766918402208177262324724438409523308667540034919444947946129938978990299003835351560181949670206743556207688093271021949880364576744650139720101999831902515510*x**2*z**5 + 252039864364971734406985414701800034827439835304182162328305103805921810303977505148164333856551626170723584501150114861683813479431717379988209083981417018171478469207255850300091172828650018553220539692191184094208385456992651976113387766319305806867898873394430586344415060994084601245*x*z**6 + 247308289805541814661115560309824463340238179875245956570532676049791316336961356169769559580359974376402551636054505296199468195763532031676306153443238851840893084361583172051694064585116432650517752211089147110223010401507471329295641141304632698693325812752135693833445626018245107073*z**7
        b0_map = 216*x**6 + 312559069800119524986528894115884307397329009283131292801408388905140554994950852487805068528375598308876885121374982788912592458457778139258008412113308080945378550287749111299016575653905186681404991796259908983534398757241114790170614539367606571618762495430133443810378377490837796678*x**5*z + 162125072814838451233029298951232469136864583214201686433151727172795925126055444333240669353645004663840271569490148096602470796759183106986042121724216713378942763898232097425152900006150475747544147258818009812119643054999184096996263783742729129692366008632420133444715140056900511954*x**4*z**2 + 279879028411507332634510735373739535464986379401760009218378678364781594708221238156200665469187007733747360706408015092833315993618887696104537307043391883070509553600558296005543637182151980139615014154928763814526567140060848431341158255450711540727440206262337594944078369992458871919*x**3*z**3 + 64540403583062258976072200252673540547841874808402209597757777804591842477837962770725903010027620629402183629109335413781216274427483652762762988613667671788104133803690571491851652001703935387850099335693672842751236608420222904049552546359559441219091347407474492466325601475438491930*x**2*z**4 + 315867002703168198541123467858808287884118081039117008022615737496189805220007592429815446224788134444717991016555616222726499006037302683153164771043727307869617917806911797663147322908119772997731099189944411457194313281792663631761292299610244065678367107630776450956517502032771362635*x*z**5 + 84750481658368488859932655998829222173793819073655313937935537243733989808543008188572076720586408324189517939578482567617779804017655060141227159121526999798881200178117305355737511723826500873401637902267653446298845370199015548236993320225640664985604263368070622103232971249064790076*z**6
        c0_map = x**6 + 11085104051803073590443870335240333701902504078788795317563944793589177799498182091056471337924385211085647418551935087587153456656940013095752642349724274403939241043717824589219553463582610407574003031072627603385125702860199044312701239504686841344319595387284411351523079044933046011*x**5*z + 115837262241353735792751913787449394622409735216007150107364382128551755152043536646937526282294396750080710375459675192591442649528548421282865929290900038930933257533631160572994837193178325832023752785040988830320854873587671463389472006134291756853912094146974988682195965930384367793*x**4*z**2 + 57793859054048863341336011619138897223580985365073783856937373584444582058701718819519450053740362523779398969751702848410742437637224478839123776373763402741757983355580071794603843751117306540020672265707907417658837814894153800124119804789808529187900649813138242850800857037748854663*x**3*z**3 + 322834518595137995953557433582027113937436436158189065789020628626594010055857372260487170958793738298829182301977100305842642509451594574025932569891237298350140731981271685974045499809827291031378133617000195235985608085332846788684174269059403202305022277116009024800039188768482916523*x**2*z**4 + 95588887505548544476440179723946625224311654176354146482422715551709889817658949434515859567482075925283206585584583334539224952219199356335327691322408710546308563062402866694020184360505847953180902438674401664714993291009556923789052031979438510994937259918467177181244534259216655119*x*z**5 + 307776330919120610757256276241369893466823808171064426370245272277935707585628373869777692080335589614229926092262526934277698875423224413765732766062387817621052919319343478396850793195473188418285308107093104410859606229340401953778985301702453975729834101966409165888307169415416524268*z**6

        a1_map = 78364164096*x**7 + 1470921279336232277590809714788991717136963158062346267675546498584582905573436*x**6*z + 1811069369024961214929782414481024260261859898950647078642238291555397972823710*x**5*z**2 + 1079011048166608864836265205852316598301022986123402199684737383316743976892323*x**4*z**3 + 382823944473937256751396073795131869942160303132535691167357901991953264015387*x**3*z**4 + 517088211577007855650579036078994457498035651345466661658756566428927988037670*x**2*z**5 + 153685117915369302141390983314896867837778429618560722633222225306978884222236*x*z**6 + 212072698887061902487177900964397387154500529601959355740124628032583164172101*z**7
        b1_map = 470184984576*x**6 + 172885228212955039486545665987613817342036679013035483440496167556405023744748*x**5*z + 181356274009906898049520664985429783799890104761361358002197757832219423366215*x**4*z**2 + 136640788829643912709004777564757038510880912298855415733246356944820891470588*x**3*z**3 + 360757476395038778236656499751905537172994072954300426100136897017297350135656*x**2*z**4 + 150345611428116979700583073085584270382783022979460914713341788761562283194451*x*z**5 + 611095758850784180877654016828091394181492784170108343304956904164678193262608*z**6
        c1_map = 2176782336*x**6 + 281210103531685302879142287153759116739352928539538566396898036737102092090814*x**5*z + 1442644040903527099493643132433275189104312071888330958344236139587278692699748*x**4*z**2 + 612367508406340993805967222304838815267266682007415345747775397516025515045028*x**3*z**3 + 1123187824103977925659961904732648764817673083945530221326500867110332324548210*x**2*z**4 + 934102099792087001565013591363563309907264938914184553264484151343055374548462*x*z**5 + 1506574921175831056088672011304914109426231207121816430217818623215813495279080*z**6

        a2_map = 78364164096*x**7 + 1271182960144253270813439614474172899080067083064389347859050940262122940639569*x**6*z + 1531661842631297584263910812277247323654030690641302679444081689373905436615699*x**5*z**2 + 1748434595904754464774802685177663746688024778049699219874892744833994543130136*x**4*z**3 + 298320302939708253447806662677807532590590424788216508205811948375019622037810*x**3*z**4 + 1167851977913917716219729857751196771328811132169482413646697497987437648909738*x**2*z**5 + 1120534771672586466112840200587285144700848885089015449337779283866888608081933*x*z**6 + 2137002921402969339951051723471463408382769855994599114624587747162129168848284*z**7
        b2_map = 470184984576*x**6 + 1137615925012190655336903219785285030370595796365554495194718523609418336565513*x**5*z + 675672706975057511011206951161910535889151916408269770908377030559093710595529*x**4*z**2 + 36204834903274697849721094621498128902171365406630659113771507370416254166873*x**3*z**3 + 2145996776509536927508146930162276341813943073150111637676578041169939948557995*x**2*z**4 + 950976839768408574069064313918575115783478253979764239738387358476915577256927*x*z**5 + 1662619930110901037222580501613634486489540705119014214142794629194874055445500*z**6
        c2_map = 2176782336*x**6 + 335749611663883376482953622025197041831381803326824777809028596394471901465539*x**5*z + 1680258810922639211395648243882140598729773168633986855309677420946193109334775*x**4*z**2 + 761988421194008803347331945641273439786992768772552262465305917170070362024034*x**3*z**3 + 378335032185021474255579746455961987421935493323740713536015546185503633130729*x**2*z**4 + 1632998939501835890420698130533349955371618902858785081809142057435054608425346*x*z**5 + 1306373572810036956420667518964079502006599720747026620977691783229334822576282*z**6
        
        a3_map = 78364164096*x**7 + 1163249700666873866318687673227305611095438095770259922417737519179908039079188*x**6*z + 841144588970869204659389707505391270442921294917249770365270515931597457673324*x**5*z**2 + 541684027361557023955188874350018146889603039225517875925898887282183186197574*x**4*z**3 + 80531384927682450995752871310162875098345604900377432212047773461483584834361*x**3*z**4 + 1046563263439174574008505863099372601584399363464535261175591863933239316815878*x**2*z**5 + 1360680723481361812529948452567761234967191206456583037098886458616293417749987*x*z**6 + 675940375838030028965931971009008736851845723840603315581168016263253067896244*z**7
        b3_map = 470184984576*x**6 + 490016368147914228368391572304081302462821872600777942546837997116128927203227*x**5*z + 319248947224149026101421631004514443737310895598453901059977386027437299090411*x**4*z**2 + 2095713536802346156174166747804644004780748758115414424438116713893220459165873*x**3*z**3 + 1255757014739354718312363888703091529836497865175025389723974275502222700516020*x**2*z**4 + 1241814022260710585754249375642510585668242465315855883347484995699085861365992*x*z**5 + 618678126986623069150901093655582595734035801463023370084904971964972414171444*z**6
        c3_map = 2176782336*x**6 + 272663670790869791454916674888156724904866121253647279028625565086972234688196*x**5*z + 1068965290747068291154244793347004888137618618921057695581194200104252654297656*x**4*z**2 + 1139439165278205622545611447927046188724216341136497046342681031719468628517486*x**3*z**3 + 1818294043687697171035917195156081520220974070344556272177827414536475357881125*x**2*z**4 + 343798765621025893125411060869978114064223206935502213446986539799567603194590*x*z**5 + 1418075314083914219929244860969037592503601224075736369364157380705285985045246*z**6
        
        a4_map = 78364164096*x**7 + 212754038764259230563310879050775869828969748318899353580799673684499802576250*x**6*z + 1395753593892944420376111654753141437022053235732109664942190513232673002665941*x**5*z**2 + 140744998288905480129594275235941748908322965268043296245400183979525245446664*x**4*z**3 + 1758013572475244011248874196368531615224954973624963267816585389001962108638816*x**3*z**4 + 660908732607138698406007542114583911273286252701443619819188841307157079466744*x**2*z**5 + 897564107490539783202813083049574233824324844214142170724095378095943384576538*x*z**6 + 1617181084958655874666188185346609704706511258980425164104290088667012395776992*z**7
        b4_map = 470184984576*x**6 + 1276524232585555383379865274304655218973818489913396121484798042106998815457500*x**5*z + 50280436130337387002440463352056069516521612309087191897279153028715920593753*x**4*z**2 + 1210058530201633688471755675064356569199513476201401908772777501051083932610365*x**3*z**3 + 1847907225308104973665379831053057191346170247191545755315744884851300589029704*x**2*z**4 + 388583100936910331125940990325457366115722078515087518166794332664142446404981*x*z**5 + 1830466435720113281286605528729977321229117884727385054516126448437671436338230*z**6
        c4_map = 2176782336*x**6 + 2048894856808388543112749115899850999900188306607993260994151491035244035694198*x**5*z + 455138368609339222282470856334730840858410267095612063306431594105002346869154*x**4*z**2 + 2075178815782899770587040729446765843301704872700780258421817931305870036905014*x**3*z**3 + 1904666006208540449822628498443936083239940345165714136315856089286329868640114*x**2*z**4 + 605505512525506039631276325696569569873109797877767782065638926230105103929764*x*z**5 + 1289019751980764068309417578261907228073621040354328226615903611050475735353556*z**6

        a5_map = 78364164096*x**7 + 918173365797421856982116374111134049022032106155629355182815080890769595449773*x**6*z + 1216277079351257670828668244955233675738397670599540190431275538131421480763008*x**5*z**2 + 2043904946128269296382132078103921334256194369830450024384869485743210001766814*x**4*z**3 + 1333833876684118301943629517887616254539072912896290763352661924324324312361922*x**3*z**4 + 38948850958505616778281492532610963011161774519715701882169566252382498882485*x**2*z**5 + 463030069114208815305817753390224280913301177052811648373836758752489907433350*x*z**6 + 2101530624268586931820635965791601616263698249292720226126070110932953751867961*z**7
        b5_map = 470184984576*x**6 + 1182718970882311828863541933293636051392321502253255069790499073369071367850704*x**5*z + 186789573026254427446743084768186189856317864702386360761090711676572003252500*x**4*z**2 + 820896646479199322923404760694906048872900648748280603642363935774597070495670*x**3*z**3 + 154096910148287948053445935637125062680364398994682197471398710422990017293988*x**2*z**4 + 2104541610928218050078371014561350556125368836340879927713855884263793264747164*x*z**5 + 1695764959416863056759158210535648933875315586621232656861941847471477310542990*z**6
        c5_map = 2176782336*x**6 + 1287348506021409017883007156764705572160852195008363902747220136295389020732030*x**5*z + 197588504813365157608665662405594019938899037760530107886258771657465121701605*x**4*z**2 + 2155689545164463403890172392049941236190092887982086736441679040121787027141963*x**3*z**3 + 407157455533946611278451029044236990428300331045196476517679841219965402700637*x**2*z**4 + 243201542432039435503693759490279184423983255117588136201779965723864731177317*x*z**5 + 192776563220037312948486207527521874632307899779784006738468618799063013717278*z**6

        a6_map = 78364164096*x**7 + 748723229029389554935339082109009080748457909497180776480983428543164589405846*x**6*z + 1391303938891551317232766995482978103355038723341132038605776604367092346654093*x**5*z**2 + 976456343641866673403460671255362609540693587256432563326693887872311625460274*x**4*z**3 + 1653961684829618698769715808731669093644298109201115468744470112666256714686811*x**3*z**4 + 1114653992257323466695402677531427401793623699266356277920090040191534323782640*x**2*z**5 + 2108607027386354826390837549863034441969749759739166544581539577047386461917759*x*z**6 + 1193614370663587251353382929683500784151470249566405174380508866261819192271619*z**7
        b6_map = 470184984576*x**6 + 166018150274118016582878181280886241750876322302563597579509159283441331587142*x**5*z + 1561609859329543545934114307480054966208701712177558959245381307544654633889526*x**4*z**2 + 1313807235922346076316039538736698115272167332182137072197512927704942796830192*x**3*z**3 + 1287612522338618938999960327168476648941438766313747654332719787622926078515289*x**2*z**4 + 505669846774700238617693208172928455055535949038459540967592424909229433170513*x*z**5 + 1205753046611077754895215355409024013073550600263723851381673594665083158626232*z**6
        c6_map = 2176782336*x**6 + 1102378173448593427005492941235208979594647170045051953562180726008974456473257*x**5*z + 764021305697784908827519174356463827659929162080053031776743068101707471927225*x**4*z**2 + 414873907231075961042811921023098852965714131361356813704037231832506997775188*x**3*z**3 + 622620192902363846175099846868260227695216996132954756473277628138129629904574*x**2*z**4 + 1480832065775769817787466844764020114600680598048823797448169609316071198490178*x*z**5 + 2051805517718069552242545345618923148734147689857553637814277725577494746473698*z**6

        self.a_maps = [a0_map, a1_map, a2_map, a3_map, a4_map, a5_map, a6_map]
        self.b_maps = [b0_map, b1_map, b2_map, b3_map, b4_map, b5_map, b6_map]
        self.c_maps = [c0_map, c1_map, c2_map, c3_map, c4_map, c5_map, c6_map]

        self.iso_x = 1591776315227191114928250266108102815068276791771315371416973227795476042238011
        self.iso_y = 362723301092365577775585079158435711361056655579945183829463270975417886340321
        
    def random_point(self):
        P = super().random_point()
        return Lollipop956451Point(P.X, P.Y,P.Z, self)
       
class Lollipop956451Point(PointWeierstrass):
      
        def __init__(self, x, y, z, curve):
            super().__init__(x, y, z, curve)

        def fast_scalar_mul(self, n):
            psiP = self.psi()
            beta = vector([n,0]) * self.curve.N_inv
            b = vector([int(beta[0]), int(beta[1])]) * self.curve.N
            k1 = n-b[0]
            k2 = -b[1]
            return self.multi_scalar_mul(k1, psiP, k2)

        def psi(self):
            x,y,z = self.X, self.Y, self.Z

            for i in range(7):
                new_x = self.curve.a_maps[i](x,z) 
                y = y* self.curve.b_maps[i](x,z) 
                z = z* self.curve.c_maps[i](x,z) 
                x = new_x

            return Lollipop956451Point(self.curve.iso_x*x,  self.curve.iso_y*y, z, self.curve)
