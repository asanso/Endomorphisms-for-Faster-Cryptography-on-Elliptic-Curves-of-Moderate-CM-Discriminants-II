import random
from curve import WeierstrassCurve
from  MNT6992 import MNT6992
from  MNT4992 import MNT4992

#mnt6-992

p = 25641744522180213985074042382512419032582205964092241104233192501069961626908990804689046062985807367763157388208148142783024211337097607475328728764340929123496640236440585428440814378281395763310908490919915070930671222454079808350406894268997985005951152391219105800051892376272420163532656250001
a = -3
b = 1642739491069868239864206518917328724337439725254750097543357143990096951788153282690860861421586090025840253466387680079357191502263632255953680449527905010857985902362206848357179784304415938666315990692980659025732260124353177900313122450061158787371088871707038627436604708188993662841042819334
r = 25641744522180213985074042382512419032582205964092241104233192501069961626908990804689046062985807367763157388208148142783024211337097607475328728764501059521991679940707134911388454490566722006414134338905237592345300668055898078034132669792309029396443022768100968479265087506725202295216329962501
eigen = 8755393583322235624319443723664913402874200942755340958163213971984906486122241114422935779373476910592110677400288398529023760704760112304369251845295565360428092853190053203262375244370427985275769122677973709446606120471880416662042575031699787390164434036694557784674658579937262190468706225568

E = WeierstrassCurve(p, a, b, r, 1)

P = E.random_point()
Q = E.random_point()

# add
R = P.add(Q)
assert R.on_curve()
assert R == Q.add(P)

# double
R = P.double()
assert R.on_curve()
assert R  == P.add(P)

# scalar mul
n = random.randint(0,r)
R = P.scalar_mul(n)
assert R.on_curve()
P.scalar_mul(E.cofactor * E.r).is_zero()

# clear cofactor
assert P.clear_cofactor().scalar_mul(E.r).is_zero()

# multi scalar mul
for [k1,k2] in [[12,13], [-12,13], [12,-13], [-12,-13]]:
    P1 = E.random_point()
    P2 = E.random_point()
    assert P1.scalar_mul(k1).add(P2.scalar_mul(k2)) == P1.multi_scalar_mul(k1,P2,k2)

E = MNT6992(p, a, b, r, 1, eigen)
P = E.random_point()
R1 = P.scalar_mul(n)
R2 = P.fast_scalar_mul(n)
assert R1 == R2

#mnt4-992

p = 25641744522180213985074042382512419032582205964092241104233192501069961626908990804689046062985807367763157388208148142783024211337097607475328728764501059521991679940707134911388454490566722006414134338905237592345300668055898078034132669792309029396443022768100968479265087506725202295216329962501
a = -3
b = 4630025964795094055640335377828829116104647285415921057280481574803823968907844433725986809743446857347156975219184199865771148305416646193332038712269279350807907061256345533099160012744717289879975555577660031297353421101603686130897543020890317371517012884189187869991863601436037916413727384042
r = 25641744522180213985074042382512419032582205964092241104233192501069961626908990804689046062985807367763157388208148142783024211337097607475328728764340929123496640236440585428440814378281395763310908490919915070930671222454079808350406894268997985005951152391219105800051892376272420163532656250001
eigen = 17198569052751224804696743053088666217728203453423791031198203236527434056515615959555990921179642139177634032804218270656023986020928859889848991661550386815656843735007111202968777541321356404760681716004717117625495332026061638555511595773881997921089002756511880920416528347470121239406208218808

E = WeierstrassCurve(p, a, b, r, 1)

P = E.random_point()
Q = E.random_point()

# add
R = P.add(Q)
assert R.on_curve()
assert R == Q.add(P)

# double
R = P.double()
assert R.on_curve()
assert R  == P.add(P)

# scalar mul
n = random.randint(0,r)
R = P.scalar_mul(n)
assert R.on_curve()
P.scalar_mul(E.cofactor * E.r).is_zero()

# clear cofactor
assert P.clear_cofactor().scalar_mul(E.r).is_zero()

# multi scalar mul
for [k1,k2] in [[12,13], [-12,13], [12,-13], [-12,-13]]:
    P1 = E.random_point()
    P2 = E.random_point()
    assert P1.scalar_mul(k1).add(P2.scalar_mul(k2)) == P1.multi_scalar_mul(k1,P2,k2)

E = MNT4992(p, a, b, r, 1, eigen)
P = E.random_point()
R1 = P.scalar_mul(n)
R2 = P.fast_scalar_mul(n)
assert R1 == R2
